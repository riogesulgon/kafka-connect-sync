networks:
  kafka-network:
    driver: bridge

volumes:
  postgres-data:
  postgres-sink-data:
  kafka-data:
  zookeeper-data:
  zookeeper-log:
  schema-registry-data:
  kafka-connect-data:

services:
  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: contacts
      POSTGRES_USER: contactuser
      POSTGRES_PASSWORD: contactpassword
    ports:
      - "5432:5432"
    networks:
      - kafka-network

  postgres-sink:
    image: postgres:15-alpine
    volumes:
      - postgres-sink-data:/var/lib/postgresql/data
      - ./init-db-sink:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: contacts_sink
      POSTGRES_USER: sinkuser
      POSTGRES_PASSWORD: sinkpassword
    ports:
      - "5433:5432"
    networks:
      - kafka-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka-network

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
    volumes:
      - schema-registry-data:/var/lib/schema-registry
    networks:
      - kafka-network

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.4.1
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - kafka
      - postgres
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/usr/share/filestream-connectors,/etc/kafka-connect/custom-plugins
    volumes:
      - kafka-connect-data:/var/lib/kafka-connect
      - ./connectors:/etc/kafka-connect/connectors
      - ./custom-plugins:/etc/kafka-connect/custom-plugins
    networks:
      - kafka-network

  connector-installer:
    image: confluentinc/cp-kafka-connect:7.4.1
    depends_on:
      - kafka-connect
      - postgres
      - postgres-sink
    command:
      - /bin/bash
      - -c
      - |
        echo "Installing connectors..."
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.7.4
        echo "Copying connector plugins..."
        cp -r /usr/share/confluent-hub-components/* /etc/kafka-connect/custom-plugins/
        echo "Waiting for Kafka Connect to start..."
        sleep 30
        echo "Creating source connector..."
        curl -X POST http://kafka-connect:8083/connectors -H "Content-Type: application/json" -d @/etc/kafka-connect/connectors/postgres-source-connector.json
        echo "Creating sink connector..."
        curl -X POST http://kafka-connect:8083/connectors -H "Content-Type: application/json" -d @/etc/kafka-connect/connectors/postgres-sink-connector.json
        echo "Done!"
        sleep infinity
    volumes:
      - ./connectors:/etc/kafka-connect/connectors
      - ./custom-plugins:/etc/kafka-connect/custom-plugins
    networks:
      - kafka-network
